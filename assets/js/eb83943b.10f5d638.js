"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[949],{3905:function(e,n,t){t.r(n),t.d(n,{MDXContext:function(){return c},MDXProvider:function(){return m},mdx:function(){return h},useMDXComponents:function(){return d},withMDXComponents:function(){return s}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){return function(n){var t=d(n.components);return r.createElement(e,a({},n,{components:t}))}},d=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=d(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),s=d(t),m=i,f=s["".concat(l,".").concat(m)]||s[m]||p[m]||a;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=f;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},12038:function(e,n,t){t.d(n,{EO:function(){return o},O1:function(){return l},Rr:function(){return u}});var r,i=t(67294),a=t(44256);function l(e){return i.createElement("a",{href:r+e.file},e.file)}function o(e){return i.createElement("a",{href:r+e.file},e.children)}r=(0,a.isInternal)()?"https://www.internalfb.com/code/fbsource/fbcode/":"https://github.com/facebookincubator/Glean/tree/master/";var u=function(e){e.children;var n=e.internal,t=e.external;return(0,a.fbContent)({internal:i.createElement("code",null,n),external:i.createElement("code",null,t)})}},82692:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return d}});var r=t(87462),i=t(63366),a=(t(67294),t(3905)),l=(t(44256),t(12038)),o=["components"],u={id:"lsif-rust",title:"Rust",sidebar_label:"Rust"},c=void 0,s={unversionedId:"indexer/lsif-rust",id:"indexer/lsif-rust",isDocsHomePage:!1,title:"Rust",description:"To index Rust we use rust-analyzer in LSIF mode. Pre-built binaries of rust-analyzer can be used as indexers that emit LSIF from Rust source.",source:"@site/docs/indexer/lsif-rust.md",sourceDirName:"indexer",slug:"/indexer/lsif-rust",permalink:"/docs/indexer/lsif-rust",editUrl:"https://github.com/facebookincubator/Glean/tree/main/glean/website/docs/indexer/lsif-rust.md",tags:[],version:"current",frontMatter:{id:"lsif-rust",title:"Rust",sidebar_label:"Rust"},sidebar:"someSidebar",previous:{title:"Go",permalink:"/docs/indexer/lsif-go"}},d=[{value:"Run the indexer",id:"run-the-indexer",children:[],level:2},{value:"In the shell",id:"in-the-shell",children:[],level:2},{value:"Schema",id:"schema",children:[],level:2}],m={toc:d};function p(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.mdx)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"To index ",(0,a.mdx)("a",{parentName:"p",href:"https://www.rust-lang.org/"},"Rust")," we use ",(0,a.mdx)("a",{parentName:"p",href:"https://rust-analyzer.github.io/"},"rust-analyzer")," in LSIF mode. Pre-built binaries of ",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/rust-analyzer/rust-analyzer/releases"},"rust-analyzer")," can be used as indexers that emit LSIF from Rust source."),(0,a.mdx)("h2",{id:"run-the-indexer"},"Run the indexer"),(0,a.mdx)("p",null,"Build the glean-lsif indexer, which wraps rust-analyzer."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"> cabal build glean-lsif\n")),(0,a.mdx)("p",null,"And index your Rust repository with:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"glean-lsif --language rust --o JSON DIR\n")),(0,a.mdx)("p",null,"where"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"DIR")," is the root directory containing the TypeScript project"),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"JSON")," is the directory in which to write the output ",(0,a.mdx)("inlineCode",{parentName:"li"},".json")," files after converting from lsif")),(0,a.mdx)("p",null,"The generated files can be ingested into a Glean database using ",(0,a.mdx)("a",{parentName:"p",href:"/docs/cli#glean-create"},(0,a.mdx)("inlineCode",{parentName:"a"},"glean\ncreate")),", or added to Glean with ",(0,a.mdx)("inlineCode",{parentName:"p"},":load")," in the shell."),(0,a.mdx)("h2",{id:"in-the-shell"},"In the shell"),(0,a.mdx)("p",null,"Rust source can also be indexed directly from the Glean shell:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},":index lsif/rust DIR\n")),(0,a.mdx)("h2",{id:"schema"},"Schema"),(0,a.mdx)("p",null,"The schema is in ",(0,a.mdx)(l.O1,{file:"glean/schema/source/lsif.angle",mdxType:"SrcFile"})))}p.isMDXComponent=!0}}]);